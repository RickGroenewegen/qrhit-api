<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#0077be">
    <link rel="manifest" href="/assets/manifest.json">
    <link rel="icon" type="image/x-icon" href="/assets/images/favicon.ico">
    <link rel="apple-touch-icon" href="/assets/images/icon-192x192.png">
    <title>QRSong!</title>
    <script src="https://cdn.jsdelivr.net/npm/jsqr@1.3.1/dist/jsQR.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: linear-gradient(135deg, #0077be, #00264d);
            color: #ffffff;
            font-family: 'Roboto', sans-serif;
        }

        .container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 100%;
            height: 100%;
            text-align: center;
        }

        .title {
            font-size: 3rem;
            font-weight: bold;
            margin-bottom: 2rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .message-top {
            font-size: 1.2rem;
            text-align: center;
            max-width: 100%;
            margin-bottom: 1rem;
        }

        .countdown {
            font-size: 8rem;
            font-weight: bold;
            transition: transform 0.3s ease-in-out;
        }

        .zoom {
            transform: scale(1.2);
        }

        .message-bottom {
            font-size: 1.2rem;
            text-align: center;
            max-width: 100%;
            margin-top: 2rem;
        }

        .footer {
            position: fixed;
            bottom: 1rem;
            font-size: 0.9rem;
            opacity: 0.7;
        }

        #onboarding-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #0077be, #00264d);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .onboarding-content {
            text-align: center;
            max-width: 80%;
        }

        .install-instructions {
            text-align: left;
            margin-top: 20px;
        }

        #close-onboarding {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #ffffff;
            color: #0077be;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
        }

        .qr-icon {
            cursor: pointer;
            display: flex;
            flex-direction: column;
            align-items: center;
            font-size: 1.2rem;
        }

        .qr-icon i {
            font-size: 3rem;
            margin-bottom: 1rem;
        }

        #qr-video {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: 1001;
        }

        #qr-canvas {
            display: none;
        }

        #countdown-container {
            display: none;
            text-align: center;
        }

        #close-scanner {
            display: none;
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 10px 20px;
            background-color: #ffffff;
            color: #0077be;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 1.2rem;
            font-weight: bold;
            z-index: 1002;
        }
    </style>
</head>
<body>
    <div class="container" id="main-container">
        <div class="title">
            <img src="/assets/images/logo_white.png" style="max-width:300px;"/>
        </div>
        <div id="countdown-container">
            <div class="message-top">Your song will start playing in ...</div>
            <div id="countdown" class="countdown"><%= process.env['COUNTDOWN'] %></div>
            <div class="message-bottom">Get ready!</div>
        </div>
        <div id="qr-icon" class="qr-icon" onclick="toggleQRScanner()">
            <i class="fas fa-camera" style="font-size: 100px;margin-bottom:25px;"></i>
            <div>Tap the camera icon to scan</div>
        </div>
    </div>
    <div class="footer">&copy; QRSong! <%= new Date().getFullYear() %>. All rights reserved.</div>

    <div id="onboarding-overlay">
        <div class="onboarding-content">
            <div class="title">
                <img src="/assets/images/logo_white.png" style="max-width:300px;"/>
            </div>
            <p>You need to install this app on your mobile device</p>
            <div class="install-instructions">
                <h3>How to install:</h3>
                <p>On iOS Safari:</p>
                <ol>
                    <li>Tap the share button</li>
                    <li>Scroll down and tap "Add to Home Screen"</li>
                </ol>
                <p>On Android Chrome:</p>
                <ol>
                    <li>Tap the menu button â‹®</li>
                    <li>Tap "Add to Home Screen"</li>
                </ol>
            </div>
            <button id="close-onboarding">Got it!</button>
        </div>
    </div>

    <video id="qr-video"></video>
    <canvas id="qr-canvas"></canvas>
    <button id="close-scanner" onclick="stopScanning()">Close Scanner</button>

    <script>
        function isPWAInstalled() {
            return window.matchMedia('(display-mode: standalone)').matches ||
                window.navigator.standalone ||
                document.referrer.includes('android-app://');
        }

        function hasSeenOnboarding() {
            return localStorage.getItem('hasSeenOnboarding') === 'true';
        }

        function setOnboardingSeen() {
            localStorage.setItem('hasSeenOnboarding', 'true');
        }

        function isCameraSupported() {
            return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);
        }

        function hasRequestedCameraPermission() {
            return localStorage.getItem('hasRequestedCameraPermission') === 'true';
        }

        function setRequestedCameraPermission() {
            localStorage.setItem('hasRequestedCameraPermission', 'true');
        }

        let countdownValue = <%= process.env['COUNTDOWN'] %>;
        const countdownElement = document.getElementById('countdown');
        const countdownContainer = document.getElementById('countdown-container');
        const environment = '<%= process.env['ENVIRONMENT'] %>';
        
        let deferredPrompt;
        let spotifyURI;

        function updateCountdown() {
            countdownElement.textContent = countdownValue;
            countdownElement.classList.add('zoom');

            setTimeout(() => {
                countdownElement.classList.remove('zoom');
            }, 300);

            if (countdownValue > 0) {
                countdownValue--;
                setTimeout(updateCountdown, 1000);
            } else {
                if (spotifyURI) {
                    console.log('Redirecting to Spotify URI:', spotifyURI);
                    window.location.href = spotifyURI;
                    countdownValue = <%= process.env['COUNTDOWN'] %>;
                    stopScanning();
                } else {
                    console.log('Countdown finished. Redirect skipped in development environment.');
                }
            }
        }

        let scanning = false;
        let videoStream;

        function toggleQRScanner() {
            if (scanning) {
                stopScanning();
            } else {
                startScanning();
            }
        }

        function convertToSpotifyURI(url) {
            const spotifyWebUrlPattern = /^https?:\/\/open\.spotify\.com\/(track|album|playlist|artist)\/([a-zA-Z0-9]+)(.*)$/;
            const match = url.match(spotifyWebUrlPattern);
            
            if (match) {
                const [, type, id] = match;
                return `spotify:${type}:${id}`;
            }
            
            return url; // Return original URL if it doesn't match the pattern
        }

        function startScanning() {
            navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } })
                .then(function(stream) {
                    scanning = true;
                    videoStream = stream;
                    const video = document.getElementById("qr-video");
                    const canvasElement = document.getElementById("qr-canvas");
                    const canvas = canvasElement.getContext("2d");
                    
                    video.srcObject = stream;
                    video.setAttribute("playsinline", true);
                    video.play();
                    video.style.display = "block";
                    document.getElementById("close-scanner").style.display = "block";
                    requestAnimationFrame(tick);

                    function tick() {
                        if (video.readyState === video.HAVE_ENOUGH_DATA) {
                            canvasElement.height = video.videoHeight;
                            canvasElement.width = video.videoWidth;
                            canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
                            var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
                            var code = jsQR(imageData.data, imageData.width, imageData.height, {
                                inversionAttempts: "dontInvert",
                            });
                            if (code) {
                                console.log("Found QR code", code.data);

                                if(code.data.includes('/qr/')) {
                                    const qrCodeData = code.data.split('/');
                                    const qrCodeLink = qrCodeData[qrCodeData.length - 1];

                                    fetch('<%= process.env['API_URI'] %>/qrlink/' + qrCodeLink)
                                        .then(response => response.json())
                                        .then(data => {
                                            spotifyURI = convertToSpotifyURI(data.link);
                                            stopScanning();
                                            document.getElementById('qr-icon').style.display = 'none';
                                            countdownContainer.style.display = 'block';
                                            updateCountdown();
                                        })
                                        .catch(error => {
                                            console.error('Error:', error);
                                        });
                                }
                                stopScanning();
                            }
                        }
                        if (scanning) {
                            requestAnimationFrame(tick);
                        }
                    }
                })
                .catch(function(error) {
                    console.error("Error accessing the camera", error);
                    alert("Error accessing the camera. Please make sure you've granted camera permissions.");
                });
        }

        function stopScanning() {
            scanning = false;
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
            }
            document.getElementById("qr-video").style.display = "none";
            document.getElementById("close-scanner").style.display = "none";
            document.getElementById('qr-icon').style.display = 'block';
            const countdownContainer = document.getElementById('countdown-container');
            countdownContainer.style.display = 'none';
        }

        document.addEventListener('DOMContentLoaded', function() {
            if (isPWAInstalled()) {
                if (isCameraSupported() && !hasRequestedCameraPermission()) {
                   // requestCameraPermission();
                }
                document.getElementById('qr-icon').style.display = 'block';
            } else {
                document.getElementById('onboarding-overlay').style.display = 'flex';
                document.getElementById('main-container').style.display = 'none';
            }

            document.getElementById('close-onboarding').addEventListener('click', function() {
                document.getElementById('onboarding-overlay').style.display = 'none';
                document.getElementById('main-container').style.display = 'flex';
                document.getElementById('qr-icon').style.display = 'block';
                setOnboardingSeen();
            });

            window.addEventListener('beforeinstallprompt', (e) => {
                e.preventDefault();
                deferredPrompt = e;
            });

            window.addEventListener('appinstalled', (evt) => {
                console.log('PWA was installed');
                setOnboardingSeen();
            });
        });
    </script>
    <script>
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', () => {
                navigator.serviceWorker.register('/assets/js/sw.js')
                    .then(registration => {
                        console.log('Service Worker registered successfully:', registration.scope);
                    })
                    .catch(error => {
                        console.log('Service Worker registration failed:', error);
                    });
            });
        }
    </script>

</body>
</html>
